@page "/characters"
@using RickAndMortyWiki.Components
@using RickAndMortyWiki.Domain.GraphQl.Helpers

<PageTitle>Characters</PageTitle>

<h1 class="text-center default-font">Characters</h1>

<div class="search-bar default-font text-center">
    <input class="input" @bind-value="@_filter.Name" placeholder="Search for characters"/>
    <button class="custom-button" @onclick="Search">
        <span class="oi oi-magnifying-glass"></span> Search
    </button>
    <button class="custom-button" @onclick="Reset">
            <span class="oi oi-loop-circular"></span> Reset
        </button>
    <button class="custom-button" @onclick="() => {_showFilters = !_showFilters;}">
        <span class="oi oi-list"></span> Filters
    </button>
</div>


<div class="filter-container default-font text-center">
    @if (_showFilters)
    {
        <select class="filter" @bind="_filter.Status">
            <option value="">Select status</option>
            @foreach (var filter in FilterUnits.Statuses) 
            { <option value="@filter">@filter</option> }
        </select>
        <select class="filter" @bind="_filter.Species">
            <option value="">Select species</option>
            @foreach (var filter in FilterUnits.Species)
            { <option value="@filter">@filter</option> }
        </select>
        <select class="filter" @bind="_filter.Gender">
            <option value="">Select gender</option>
            @foreach (var filter in FilterUnits.Genders)
            { <option value="@filter">@filter</option> }
        </select>
        <select class="filter" @bind="_filter.Type">
            <option value="">Select type</option>
            @foreach (var filter in FilterUnits.Types)
            { <option value="@filter">@filter</option> }
        </select>
    }
</div>

@if (_characters is null)
{
    <Spinner/>
}
else
{
    <CardsWrapper Characters="_characters" OnClick="OnCardClick"/>
    
    <div class="pagin text-center">
        @if (_displayedPages.Count > 1)
            {
                if (_page.Prev is null){<button class="custom-button">Prev</button>}
                else{<button class="selected-button" onclick="@(() => NavigateOnPage("prev"))">Prev</button>}
                
                for (var i = 0; i < _displayedPages.Count; i++)
                {
                    var n = _displayedPages[i];
                    if (i != 0 && (_displayedPages[i] - _displayedPages[i - 1] >= 2)) 
                        { <button class="separator">~</button> }
                    if (n == _currentPage) {<button class="selected-button">@_displayedPages[i]</button>}
                    else {<button class="custom-button" onclick="@(() => NavigateOnPage(n.ToString()))">@_displayedPages[i]</button>}
                }
                
                if (_page.Next is null){<button class="custom-button">Next</button>}
                else{<button class="selected-button" onclick="@(() => NavigateOnPage("next"))">Next</button>}
            }
    </div>
    
}